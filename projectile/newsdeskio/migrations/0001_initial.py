# Generated by Django 4.1.3 on 2023-01-02 08:29

import autoslug.fields
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import newsdeskio.paths
import newsdeskio.slugifiers
import simple_history.models
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accountio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsdeskPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=newsdeskio.slugifiers.get_newsdeskpost_slug, unique=True)),
                ('summary', models.TextField(blank=True)),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=newsdeskio.paths.get_newsdeskpost_image_path)),
                ('is_featured', models.BooleanField()),
                ('kind', models.CharField(choices=[('EVENT', 'Event'), ('NEWS', 'News')], db_index=True, default='EVENT', max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('UNPUBLISHED', 'Unpublished'), ('ARCHIVED', 'Archived'), ('HIDDEN', 'Hidden'), ('REMOVED', 'Removed')], db_index=True, max_length=20)),
                ('event_datetime', models.DateTimeField(blank=True, null=True)),
                ('organization_slug', autoslug.fields.AutoSlugField(editable=False, populate_from=newsdeskio.slugifiers.get_newsdeskpost_organization_slug)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization')),
            ],
            options={
                'ordering': ('-created_at',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NewsdeskContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('frozen', models.TextField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsdeskio.newsdeskpost')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNewsdeskPost',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=newsdeskio.slugifiers.get_newsdeskpost_slug)),
                ('summary', models.TextField(blank=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('is_featured', models.BooleanField()),
                ('kind', models.CharField(choices=[('EVENT', 'Event'), ('NEWS', 'News')], db_index=True, default='EVENT', max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('UNPUBLISHED', 'Unpublished'), ('ARCHIVED', 'Archived'), ('HIDDEN', 'Hidden'), ('REMOVED', 'Removed')], db_index=True, max_length=20)),
                ('event_datetime', models.DateTimeField(blank=True, null=True)),
                ('organization_slug', autoslug.fields.AutoSlugField(editable=False, populate_from=newsdeskio.slugifiers.get_newsdeskpost_organization_slug)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accountio.organization')),
            ],
            options={
                'verbose_name': 'historical newsdesk post',
                'verbose_name_plural': 'historical newsdesk posts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
