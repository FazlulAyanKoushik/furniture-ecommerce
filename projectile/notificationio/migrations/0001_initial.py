# Generated by Django 4.1.7 on 2023-07-31 11:44

import autoslug.fields
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import notificationio.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fileroomio', '0003_fileitem_user_historicalfileitem_user_and_more'),
        ('catalogio', '0012_historicalproduct_channels_product_channels'),
        ('invitio', '0001_initial'),
        ('gruppio', '0001_initial'),
        ('newsdeskio', '0002_historicalnewsdeskpost_description_and_more'),
        ('collabio', '0003_alter_historicalprojectparticipant_status_and_more'),
        ('accountio', '0006_organizationuser_designation'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('new_product', models.BooleanField(default=True)),
                ('new_project', models.BooleanField(default=True)),
                ('invite_request', models.BooleanField(default=True)),
                ('invite_accepted', models.BooleanField(default=True)),
                ('invite_rejected', models.BooleanField(default=True)),
                ('group_invite_request', models.BooleanField(default=True)),
                ('group_invite_accepted', models.BooleanField(default=True)),
                ('group_invite_rejected', models.BooleanField(default=True)),
                ('news_post', models.BooleanField(default=True)),
                ('event_post', models.BooleanField(default=True)),
                ('post_reply', models.BooleanField(default=True)),
                ('post_like', models.BooleanField(default=True)),
                ('product_pricing', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('file', models.BooleanField(default=True)),
                ('kind', models.CharField(choices=[('ORGANIZATION', 'Organization'), ('USER', 'User')], db_index=True, max_length=20)),
                ('organization', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accountio.organization')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notification Settings',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=notificationio.utils.get_notification_slug, unique=True)),
                ('kind', models.CharField(choices=[('EVENT_POST', 'Event Post'), ('GROUP_INVITE_REQUEST', 'Group Invite Request'), ('GROUP_INVITE_ACCEPTED', 'Group Invite Accepted'), ('GROUP_INVITE_REJECTED', 'Group Invite Rejected'), ('INVITE_REQUEST', 'Invite Request'), ('INVITE_ACCEPTED', 'Invite Accepted'), ('INVITE_REJECTED', 'Invite Rejected'), ('NEW_PRODUCT', 'New Product'), ('NEW_PROJECT', 'New Project'), ('NEWS_POST', 'News Post'), ('POST_REPLY', 'Post Reply'), ('POST_LIKE', 'Post Like'), ('PRODUCT_PRICING', 'Product Pricing'), ('FILE', 'File')], max_length=30)),
                ('message', models.CharField(max_length=255)),
                ('is_unread', models.BooleanField(default=True)),
                ('model_kind', models.CharField(choices=[('PRODUCT', 'Product'), ('PROJECT', 'Project'), ('ORGANIZATION_INVITE', 'Organization Invite'), ('MEMBER', 'Member'), ('NEWS_DESK_POST', 'News Desk Post'), ('PRODUCT_DISCOUNT', 'Product Discount'), ('FILE_ITEM_ACCESS', 'File Item Access')], db_index=True, max_length=20)),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogio.productdiscount')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fileroomio.fileitemaccess')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gruppio.member')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_set', to='accountio.organization')),
                ('organization_invite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invitio.organizationinvite')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newsdeskio.newsdeskpost')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogio.product')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='collabio.project')),
                ('target', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receivers_set', to='accountio.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
