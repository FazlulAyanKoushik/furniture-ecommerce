# Generated by Django 4.1.7 on 2023-04-03 15:50

import autoslug.fields
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tagio.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalogio", "0005_alter_historicalproduct_scraped_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accountio", "0003_alter_historicalorganization_kind_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("COLOR", "Color"),
                            ("INDUSTRY", "Industry"),
                            ("PRODUCT", "Product"),
                            ("MATERIAL", "Material"),
                            ("TEXTILE", "Textile"),
                            ("FABRIC", "Fabric"),
                            ("WOOD", "Wood"),
                            ("PLASTIC", "Plastic"),
                            ("METAL", "Metal"),
                        ],
                        db_index=True,
                        max_length=40,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("i18n", models.CharField(max_length=100)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        populate_from=tagio.utils.get_tag_slug,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("HIDDEN", "Hidden"),
                            ("ARCHIVED", "Archived"),
                            ("REMOVED", "Removed"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="tagio.tag",
                    ),
                ),
            ],
            options={
                "ordering": ("category", "name"),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="TagConnector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "entity",
                    models.CharField(
                        choices=[
                            ("ORGANIZATION", "Organization"),
                            ("PRODUCT", "Product"),
                            ("USER", "User"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accountio.organization",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogio.product",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tagio.tag"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag Connector",
                "ordering": ("-created_at",),
                "unique_together": {
                    ("organization", "tag"),
                    ("user", "tag"),
                    ("product", "tag"),
                },
                "index_together": {
                    ("organization", "tag"),
                    ("user", "tag"),
                    ("product", "tag"),
                },
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
